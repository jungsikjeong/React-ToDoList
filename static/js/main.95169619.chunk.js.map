{"version":3,"sources":["components/TodoInsert.js","components/Default.js","components/TodoList.js","components/App.js","components/modules/todos.js","components/modules/index.js","index.js"],"names":["Input","styled","input","TodoInsert","onInsert","rest","useState","value","setValue","onChange","useCallback","e","target","onSubmit","preventDefault","className","color","placeholder","style","cursor","Content","div","Default","verticalAlign","marginRight","Container","ContainerBox","props","reset","css","Span","span","check","TodoList","todos","onRemove","onToggle","todoList","JSON","parse","localStorage","getItem","console","log","href","map","todo","key","id","checked","onClick","text","marginLeft","length","App","setTodos","nextId","useRef","current","concat","setItem","stringify","filter","todoChange","initialState","state","action","type","payload","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"2pBAIA,IAAMA,EAAQC,IAAOC,MAAV,KA8CIC,EA9BI,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SAAqB,KAAXC,KACJC,mBAAS,KADM,mBAClCC,EADkC,KAC3BC,EAD2B,KAGnCC,EAAWC,uBAAY,SAACC,GAC5BH,EAASG,EAAEC,OAAOL,SACjB,IAEGM,EAAWH,uBACf,SAACC,GACCP,EAASG,GACTC,EAAS,IAETG,EAAEG,mBAEJ,CAACV,EAAUG,IAGb,OACE,0BAAMQ,UAAU,SAASF,SAAUA,GACjC,kBAAC,IAAD,CAAUG,MAAM,QAChB,kBAAChB,EAAD,CACEO,MAAOA,EACPE,SAAUA,EACVQ,YAAY,WACZC,MAAO,CAAEC,OAAQ,e,2bCxCzB,IAAMC,EAAUnB,IAAOoB,IAAV,KAuCEC,EAjBC,WACd,OACE,kBAACF,EAAD,KACE,yBAAKL,UAAU,iBACb,kBAAC,IAAD,CACEG,MAAO,CACLK,cAAe,SACfC,YAAa,SACbR,MAAO,aAGX,6F,ykCC7BR,IAAMS,EAAYxB,IAAOoB,IAAV,KAITK,EAAezB,IAAOoB,IAAV,KAcZ,SAACM,GAAD,OACAA,EAAMC,OACNC,YADA,QAWAT,EAAUnB,IAAOoB,IAAV,KAkBPS,EAAO7B,IAAO8B,KAAV,KACN,SAACJ,GAAD,OACAA,EAAMK,OACNH,YADA,QAyEWI,EAlEE,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAO9B,EAAmC,EAAnCA,SAAU+B,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAEvCC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,GAK7D,OAHAC,QAAQC,IAAI,YAAaN,GACzBK,QAAQC,IAAI,SAAUT,GAGpB,kBAACT,EAAD,KACE,kBAACC,EAAD,KACE,uBAAGkB,KAAK,KACN,0BAAM7B,UAAU,SAAhB,UAGDmB,GAASG,EACNA,EAASQ,KAAI,SAACC,GAAD,OACX,kBAAC,EAAD,CAASC,IAAKD,EAAKE,IAChBF,EAAKG,QACJ,oCACE,yBAAKlC,UAAU,iBACb,kBAAC,IAAD,CACEG,MAAO,CACLK,cAAe,SACfC,YAAa,SACbR,MAAO,WAETkC,QAAS,kBAAMd,EAASU,EAAKE,OAE/B,kBAAClB,EAAD,CAAME,OAAK,EAACkB,QAAS,kBAAMd,EAASU,EAAKE,MACtCF,EAAKK,MAER,kBAAC,IAAD,CACED,QAAS,kBAAMf,EAASW,EAAKE,KAC7B9B,MAAO,CAAEkC,WAAY,YAK3B,oCACE,yBAAKrC,UAAU,iBACb,kBAAC,IAAD,CACEG,MAAO,CACLK,cAAe,SACfC,YAAa,UAEf0B,QAAS,kBAAMd,EAASU,EAAKE,OAE/B,kBAAClB,EAAD,CAAMoB,QAAS,kBAAMd,EAASU,EAAKE,MAAMF,EAAKK,MAC9C,kBAAC,IAAD,CACED,QAAS,kBAAMf,EAASW,EAAKE,KAC7B9B,MAAO,CAAEkC,WAAY,gBAOjC,GACiB,IAApBf,EAASgB,QAAgB,kBAAC,EAAD,MAE1B,kBAAC,EAAD,CAAYjD,SAAUA,OCxEfkD,EAlDH,WAAO,IAAD,EACUhD,mBAAS,IADnB,mBACT4B,EADS,KACFqB,EADE,KAGVC,EAASC,iBAAO,GAEhBrD,EAAWM,uBACf,SAACyC,GACC,IAAML,EAAO,CACXE,GAAIQ,EAAOE,QACXP,OACAF,SAAS,GAEXM,EAASrB,EAAMyB,OAAOb,IACtBN,aAAaoB,QAAQ,OAAQtB,KAAKuB,UAAU3B,IAC5CsB,EAAOE,SAAW,IAEpB,CAACxB,IAGGE,EAAW1B,uBACf,SAACsC,GACCO,EACErB,EAAMW,KAAI,SAACC,GAAD,OACRA,EAAKE,KAAOA,EAAZ,2BAAsBF,GAAtB,IAA4BG,SAAUH,EAAKG,UAAYH,QAI7D,CAACZ,IAGGC,EAAWzB,uBACf,SAACsC,GACCO,EAASrB,EAAM4B,QAAO,SAAChB,GAAD,OAAUA,EAAKE,KAAOA,MAC5C,IACMe,GADWzB,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,IACjCqB,QAAO,SAAChB,GAAD,OAAUA,EAAKE,KAAOA,KACzDR,aAAaoB,QAAQ,OAAQtB,KAAKuB,UAAUE,MAE9C,CAAC7B,IAGH,OACE,kBAAC,EAAD,CACEA,MAAOA,EACP9B,SAAUA,EACV+B,SAAUA,EACVC,SAAUA,K,uBCjCV4B,EAAe,CACnB9B,MAAO,CACL,CACEc,GAAI,EACJG,KAAM,gBACNF,SAAS,GAEX,CACED,GAAI,EACJG,KAAM,gBACNF,SAAS,GAEX,CACED,GAAI,EACJG,KAAM,kBACNF,SAAS,KAsBAf,MAhBf,WAA8C,IAA/B+B,EAA8B,uDAAtBD,EAAcE,EAAQ,uCAC3C,OAAQA,EAAOC,MACb,IAnCW,SAoCT,OAAO,2BAAKF,GAAZ,IAAmB/B,MAAOgC,EAAOE,UAQnC,QACE,OAAOH,ICzCEI,EAJKC,0BAAgB,CAClCpC,UCKIqC,EAAQC,sBAAYH,EAAaI,iCAEvCC,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,OAEFK,SAASC,eAAe,W","file":"static/js/main.95169619.chunk.js","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { IoIosAdd } from \"react-icons/io\";\r\n\r\nconst Input = styled.input`\r\n  padding: 20px 10px;\r\n  width: 100%;\r\n  border: none;\r\n  font-size: 14px;\r\n\r\n  :focus {\r\n    outline: none;\r\n    width: 80%;\r\n    transform: translateY(10px);\r\n    box-shadow: 0 30px 60px -12px rgba(50, 50, 93, 0.25),\r\n      0 18px 36px -18px rgba(0, 0, 0, 0.3),\r\n      0 -12px 36px -8px rgba(0, 0, 0, 0.025);\r\n  }\r\n`;\r\n\r\nconst TodoInsert = ({ onInsert, rest }) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const onChange = useCallback((e) => {\r\n    setValue(e.target.value);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      onInsert(value);\r\n      setValue(\"\");\r\n\r\n      e.preventDefault();\r\n    },\r\n    [onInsert, value]\r\n  );\r\n\r\n  return (\r\n    <form className=\"submit\" onSubmit={onSubmit}>\r\n      <IoIosAdd color=\"red\" />\r\n      <Input\r\n        value={value}\r\n        onChange={onChange}\r\n        placeholder=\"Add task\"\r\n        style={{ cursor: \"pointer\" }}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoInsert;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { RiEmotionNormalLine } from \"react-icons/ri\";\r\n\r\nconst Content = styled.div`\r\n  font-size: 1.2rem;\r\n  padding: 1rem 0rem;\r\n  border-bottom: 1px solid #dee2e6;\r\n\r\n  .textContainer {\r\n    display: flex;\r\n    flex: 1 1 auto;\r\n    align-items: center;\r\n    vertical-align: middle;\r\n    text-align: center;\r\n\r\n    span {\r\n      font-size: 1.2rem;\r\n      color: #adb5bd;\r\n      @media (max-width: 600px) {\r\n        font-size: 0.4rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Default = () => {\r\n  return (\r\n    <Content>\r\n      <div className=\"textContainer\">\r\n        <RiEmotionNormalLine\r\n          style={{\r\n            verticalAlign: \"middle\",\r\n            marginRight: \"0.5rem\",\r\n            color: \"#adb5bd\",\r\n          }}\r\n        />\r\n        <span>목록이 비어있습니다.</span>\r\n      </div>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default Default;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { RiEmotionNormalLine, RiEmotionHappyLine } from \"react-icons/ri\";\r\nimport { BsTrash } from \"react-icons/bs\";\r\n\r\nimport TodoInsert from \"./TodoInsert\";\r\nimport Default from \"./Default\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst ContainerBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 9rem;\r\n\r\n  a {\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  .submit {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: 1rem;\r\n    ${(props) =>\r\n      props.reset &&\r\n      css`\r\n        background: red;\r\n      `}\r\n\r\n    input {\r\n      border: 0px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  font-size: 1.2rem;\r\n  padding: 1rem 0rem;\r\n  border-bottom: 1px solid #dee2e6;\r\n\r\n  .textContainer {\r\n    display: flex;\r\n    align-items: center;\r\n    vertical-align: middle;\r\n    text-align: center;\r\n    cursor: pointer;\r\n  }\r\n\r\n  :hover {\r\n    background: #f8f9fa;\r\n  }\r\n`;\r\n\r\nconst Span = styled.span`\r\n  ${(props) =>\r\n    props.check &&\r\n    css`\r\n      text-decoration: line-through;\r\n      color: #adb5bd;\r\n    `}\r\n`;\r\n\r\nconst TodoList = ({ todos, onInsert, onRemove, onToggle }) => {\r\n  // GET localStorage\r\n  const todoList = JSON.parse(localStorage.getItem(\"todo\")) || \"\";\r\n\r\n  console.log(\"todoList:\", todoList);\r\n  console.log(\"todos:\", todos);\r\n\r\n  return (\r\n    <Container>\r\n      <ContainerBox>\r\n        <a href=\"/\">\r\n          <span className=\"title\">Today</span>\r\n        </a>\r\n\r\n        {todos && todoList\r\n          ? todoList.map((todo) => (\r\n              <Content key={todo.id}>\r\n                {todo.checked ? (\r\n                  <>\r\n                    <div className=\"textContainer\">\r\n                      <RiEmotionHappyLine\r\n                        style={{\r\n                          verticalAlign: \"middle\",\r\n                          marginRight: \"0.5rem\",\r\n                          color: \"#fa5252\",\r\n                        }}\r\n                        onClick={() => onToggle(todo.id)}\r\n                      />\r\n                      <Span check onClick={() => onToggle(todo.id)}>\r\n                        {todo.text}\r\n                      </Span>\r\n                      <BsTrash\r\n                        onClick={() => onRemove(todo.id)}\r\n                        style={{ marginLeft: \"auto\" }}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <div className=\"textContainer\">\r\n                      <RiEmotionNormalLine\r\n                        style={{\r\n                          verticalAlign: \"middle\",\r\n                          marginRight: \"0.5rem\",\r\n                        }}\r\n                        onClick={() => onToggle(todo.id)}\r\n                      />\r\n                      <Span onClick={() => onToggle(todo.id)}>{todo.text}</Span>\r\n                      <BsTrash\r\n                        onClick={() => onRemove(todo.id)}\r\n                        style={{ marginLeft: \"auto\" }}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </Content>\r\n            ))\r\n          : \"\"}\r\n        {todoList.length === 0 && <Default />}\r\n\r\n        <TodoInsert onInsert={onInsert} />\r\n      </ContainerBox>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useRef, useCallback, useState } from \"react\";\nimport TodoList from \"./TodoList\";\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n\n  const nextId = useRef(0);\n\n  const onInsert = useCallback(\n    (text) => {\n      const todo = {\n        id: nextId.current,\n        text,\n        checked: false,\n      };\n      setTodos(todos.concat(todo));\n      localStorage.setItem(\"todo\", JSON.stringify(todos));\n      nextId.current += 1;\n    },\n    [todos]\n  );\n\n  const onToggle = useCallback(\n    (id) => {\n      setTodos(\n        todos.map((todo) =>\n          todo.id === id ? { ...todo, checked: !todo.checked } : todo\n        )\n      );\n    },\n    [todos]\n  );\n\n  const onRemove = useCallback(\n    (id) => {\n      setTodos(todos.filter((todo) => todo.id !== id));\n      const todoList = JSON.parse(localStorage.getItem(\"todo\")) || \"\";\n      const todoChange = todoList.filter((todo) => todo.id !== id);\n      localStorage.setItem(\"todo\", JSON.stringify(todoChange));\n    },\n    [todos]\n  );\n\n  return (\n    <TodoList\n      todos={todos}\n      onInsert={onInsert}\n      onRemove={onRemove}\n      onToggle={onToggle}\n    />\n  );\n};\n\nexport default App;\n","// let id = 4;\r\n\r\n// Type\r\nconst INSERT = \"insert\";\r\n// const REMOVE = \"remove\";\r\n// const TOGGLE = \"toggle\";\r\n\r\n// 액션함수\r\nexport const insert = ({ todo }) => ({\r\n  type: INSERT,\r\n  todo,\r\n});\r\n// export const remove = () => ({});\r\n// export const toggle = () => ({});\r\n\r\nconst initialState = {\r\n  todos: [\r\n    {\r\n      id: 1,\r\n      text: \"test one text\",\r\n      checked: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      text: \"test tne text\",\r\n      checked: false,\r\n    },\r\n    {\r\n      id: 3,\r\n      text: \"test three text\",\r\n      checked: true,\r\n    },\r\n  ],\r\n};\r\n\r\n// 리듀서\r\nfunction todos(state = initialState, action) {\r\n  switch (action.type) {\r\n    case INSERT:\r\n      return { ...state, todos: action.payload };\r\n\r\n    // case REMOVE:\r\n    //   return { ...state, loginSuccess: action.payload };\r\n\r\n    // case TOGGLE:\r\n    //   return { ...state, userData: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default todos;\r\n","import { combineReducers } from \"redux\";\r\nimport todos from \"./todos\";\r\n\r\nconst rootReducer = combineReducers({\r\n  todos,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./components/modules\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}